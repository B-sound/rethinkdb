// Autogenerated by convert_protofile.py at 2015-04-23.
// Do not edit this file directly.
// The template for this file is located at:
// ../../../../../../../templates/RqlQuery.java
package com.rethinkdb.ast.query;

import com.google.common.collect.Lists;
import com.rethinkdb.Cursor;
import com.rethinkdb.RethinkDBConnection;
import com.rethinkdb.ast.helper.Arguments;
import com.rethinkdb.ast.helper.OptionalArguments;
import com.rethinkdb.ast.query.gen.Date;
import com.rethinkdb.model.Durability;
import com.rethinkdb.model.RqlFunction;
import com.rethinkdb.ast.query.gen.*;
import com.rethinkdb.model.RqlFunction2;
import com.rethinkdb.proto.Q2L;
import com.rethinkdb.response.GroupedResponseConverter;
import sun.security.krb5.internal.crypto.Des;

import java.security.Key;
import java.util.*;

public class RqlQuery {
        public Datum datum(Object... fields) {
        return new Datum(this, new Arguments(fields), new Optargs());
    }

        public MakeArray makeArray(Object... fields) {
        return new MakeArray(this, new Arguments(fields), new Optargs());
    }

        public MakeObj makeObj(Object... fields) {
        return new MakeObj(this, new Arguments(fields), new Optargs());
    }

        public Var var(Object... fields) {
        return new Var(this, new Arguments(fields), new Optargs());
    }

        public Javascript js(Object... fields) {
        return new Javascript(this, new Arguments(fields), new Optargs());
    }

        public Uuid uuid(Object... fields) {
        return new Uuid(this, new Arguments(fields), new Optargs());
    }

        public Http http(Object... fields) {
        return new Http(this, new Arguments(fields), new Optargs());
    }

        public Error error(Object... fields) {
        return new Error(this, new Arguments(fields), new Optargs());
    }

        public ImplicitVar row(Object... fields) {
        return new ImplicitVar(this, new Arguments(fields), new Optargs());
    }

        public Db db(Object... fields) {
        return new Db(this, new Arguments(fields), new Optargs());
    }

        public Table table(Object... fields) {
        return new Table(this, new Arguments(fields), new Optargs());
    }

        public Get get(Object... fields) {
        return new Get(this, new Arguments(fields), new Optargs());
    }

        public GetAll getAll(Object... fields) {
        return new GetAll(this, new Arguments(fields), new Optargs());
    }

        public Eq eq(Object... fields) {
        return new Eq(this, new Arguments(fields), new Optargs());
    }

        public Ne ne(Object... fields) {
        return new Ne(this, new Arguments(fields), new Optargs());
    }

        public Lt lt(Object... fields) {
        return new Lt(this, new Arguments(fields), new Optargs());
    }

        public Le le(Object... fields) {
        return new Le(this, new Arguments(fields), new Optargs());
    }

        public Gt gt(Object... fields) {
        return new Gt(this, new Arguments(fields), new Optargs());
    }

        public Ge ge(Object... fields) {
        return new Ge(this, new Arguments(fields), new Optargs());
    }

        public Not not(Object... fields) {
        return new Not(this, new Arguments(fields), new Optargs());
    }

        public Add add(Object... fields) {
        return new Add(this, new Arguments(fields), new Optargs());
    }

        public Sub sub(Object... fields) {
        return new Sub(this, new Arguments(fields), new Optargs());
    }

        public Mul mul(Object... fields) {
        return new Mul(this, new Arguments(fields), new Optargs());
    }

        public Div div(Object... fields) {
        return new Div(this, new Arguments(fields), new Optargs());
    }

        public Mod mod(Object... fields) {
        return new Mod(this, new Arguments(fields), new Optargs());
    }

        public Floor floor(Object... fields) {
        return new Floor(this, new Arguments(fields), new Optargs());
    }

        public Ceil ceil(Object... fields) {
        return new Ceil(this, new Arguments(fields), new Optargs());
    }

        public Round round(Object... fields) {
        return new Round(this, new Arguments(fields), new Optargs());
    }

        public Append append(Object... fields) {
        return new Append(this, new Arguments(fields), new Optargs());
    }

        public Prepend prepend(Object... fields) {
        return new Prepend(this, new Arguments(fields), new Optargs());
    }

        public Difference difference(Object... fields) {
        return new Difference(this, new Arguments(fields), new Optargs());
    }

        public SetInsert setInsert(Object... fields) {
        return new SetInsert(this, new Arguments(fields), new Optargs());
    }

        public SetIntersection setIntersection(Object... fields) {
        return new SetIntersection(this, new Arguments(fields), new Optargs());
    }

        public SetUnion setUnion(Object... fields) {
        return new SetUnion(this, new Arguments(fields), new Optargs());
    }

        public SetDifference setDifference(Object... fields) {
        return new SetDifference(this, new Arguments(fields), new Optargs());
    }

        public Slice slice(Object... fields) {
        return new Slice(this, new Arguments(fields), new Optargs());
    }

        public Skip skip(Object... fields) {
        return new Skip(this, new Arguments(fields), new Optargs());
    }

        public Limit limit(Object... fields) {
        return new Limit(this, new Arguments(fields), new Optargs());
    }

        public OffsetsOf offsetsOf(Object... fields) {
        return new OffsetsOf(this, new Arguments(fields), new Optargs());
    }

        public Contains contains(Object... fields) {
        return new Contains(this, new Arguments(fields), new Optargs());
    }

        public GetField getField(Object... fields) {
        return new GetField(this, new Arguments(fields), new Optargs());
    }

        public Keys keys(Object... fields) {
        return new Keys(this, new Arguments(fields), new Optargs());
    }

        public Object object(Object... fields) {
        return new Object(this, new Arguments(fields), new Optargs());
    }

        public HasFields hasFields(Object... fields) {
        return new HasFields(this, new Arguments(fields), new Optargs());
    }

        public WithFields withFields(Object... fields) {
        return new WithFields(this, new Arguments(fields), new Optargs());
    }

        public Pluck pluck(Object... fields) {
        return new Pluck(this, new Arguments(fields), new Optargs());
    }

        public Without without(Object... fields) {
        return new Without(this, new Arguments(fields), new Optargs());
    }

        public Merge merge(Object... fields) {
        return new Merge(this, new Arguments(fields), new Optargs());
    }

        public BetweenDeprecated betweenDeprecated(Object... fields) {
        return new BetweenDeprecated(this, new Arguments(fields), new Optargs());
    }

        public Between between(Object... fields) {
        return new Between(this, new Arguments(fields), new Optargs());
    }

        public Reduce reduce(Object... fields) {
        return new Reduce(this, new Arguments(fields), new Optargs());
    }

        public Map map(Object... fields) {
        return new Map(this, new Arguments(fields), new Optargs());
    }

        public Filter filter(Object... fields) {
        return new Filter(this, new Arguments(fields), new Optargs());
    }

        public ConcatMap concatMap(Object... fields) {
        return new ConcatMap(this, new Arguments(fields), new Optargs());
    }

        public OrderBy orderBy(Object... fields) {
        return new OrderBy(this, new Arguments(fields), new Optargs());
    }

        public Distinct distinct(Object... fields) {
        return new Distinct(this, new Arguments(fields), new Optargs());
    }

        public Count count(Object... fields) {
        return new Count(this, new Arguments(fields), new Optargs());
    }

        public IsEmpty isEmpty(Object... fields) {
        return new IsEmpty(this, new Arguments(fields), new Optargs());
    }

        public Union union(Object... fields) {
        return new Union(this, new Arguments(fields), new Optargs());
    }

        public Nth nth(Object... fields) {
        return new Nth(this, new Arguments(fields), new Optargs());
    }

        public Bracket bracket(Object... fields) {
        return new Bracket(this, new Arguments(fields), new Optargs());
    }

        public InnerJoin innerJoin(Object... fields) {
        return new InnerJoin(this, new Arguments(fields), new Optargs());
    }

        public OuterJoin outerJoin(Object... fields) {
        return new OuterJoin(this, new Arguments(fields), new Optargs());
    }

        public EqJoin eqJoin(Object... fields) {
        return new EqJoin(this, new Arguments(fields), new Optargs());
    }

        public Zip zip(Object... fields) {
        return new Zip(this, new Arguments(fields), new Optargs());
    }

        public Range range(Object... fields) {
        return new Range(this, new Arguments(fields), new Optargs());
    }

        public InsertAt insertAt(Object... fields) {
        return new InsertAt(this, new Arguments(fields), new Optargs());
    }

        public DeleteAt deleteAt(Object... fields) {
        return new DeleteAt(this, new Arguments(fields), new Optargs());
    }

        public ChangeAt changeAt(Object... fields) {
        return new ChangeAt(this, new Arguments(fields), new Optargs());
    }

        public SpliceAt spliceAt(Object... fields) {
        return new SpliceAt(this, new Arguments(fields), new Optargs());
    }

        public CoerceTo coerceTo(Object... fields) {
        return new CoerceTo(this, new Arguments(fields), new Optargs());
    }

        public TypeOf typeOf(Object... fields) {
        return new TypeOf(this, new Arguments(fields), new Optargs());
    }

        public Update update(Object... fields) {
        return new Update(this, new Arguments(fields), new Optargs());
    }

        public Delete delete(Object... fields) {
        return new Delete(this, new Arguments(fields), new Optargs());
    }

        public Replace replace(Object... fields) {
        return new Replace(this, new Arguments(fields), new Optargs());
    }

        public Insert insert(Object... fields) {
        return new Insert(this, new Arguments(fields), new Optargs());
    }

        public DbCreate dbCreate(Object... fields) {
        return new DbCreate(this, new Arguments(fields), new Optargs());
    }

        public DbDrop dbDrop(Object... fields) {
        return new DbDrop(this, new Arguments(fields), new Optargs());
    }

        public DbList dbList(Object... fields) {
        return new DbList(this, new Arguments(fields), new Optargs());
    }

        public TableCreate tableCreate(Object... fields) {
        return new TableCreate(this, new Arguments(fields), new Optargs());
    }

        public TableDrop tableDrop(Object... fields) {
        return new TableDrop(this, new Arguments(fields), new Optargs());
    }

        public TableList tableList(Object... fields) {
        return new TableList(this, new Arguments(fields), new Optargs());
    }

        public Config config(Object... fields) {
        return new Config(this, new Arguments(fields), new Optargs());
    }

        public Status status(Object... fields) {
        return new Status(this, new Arguments(fields), new Optargs());
    }

        public Wait wait(Object... fields) {
        return new Wait(this, new Arguments(fields), new Optargs());
    }

        public Reconfigure reconfigure(Object... fields) {
        return new Reconfigure(this, new Arguments(fields), new Optargs());
    }

        public Rebalance rebalance(Object... fields) {
        return new Rebalance(this, new Arguments(fields), new Optargs());
    }

        public Sync sync(Object... fields) {
        return new Sync(this, new Arguments(fields), new Optargs());
    }

        public IndexCreate indexCreate(Object... fields) {
        return new IndexCreate(this, new Arguments(fields), new Optargs());
    }

        public IndexDrop indexDrop(Object... fields) {
        return new IndexDrop(this, new Arguments(fields), new Optargs());
    }

        public IndexList indexList(Object... fields) {
        return new IndexList(this, new Arguments(fields), new Optargs());
    }

        public IndexStatus indexStatus(Object... fields) {
        return new IndexStatus(this, new Arguments(fields), new Optargs());
    }

        public IndexWait indexWait(Object... fields) {
        return new IndexWait(this, new Arguments(fields), new Optargs());
    }

        public IndexRename indexRename(Object... fields) {
        return new IndexRename(this, new Arguments(fields), new Optargs());
    }

        public Funcall do(Object... fields) {
        return new Funcall(this, new Arguments(fields), new Optargs());
    }

        public Branch branch(Object... fields) {
        return new Branch(this, new Arguments(fields), new Optargs());
    }

        public Or or(Object... fields) {
        return new Or(this, new Arguments(fields), new Optargs());
    }

        public And and(Object... fields) {
        return new And(this, new Arguments(fields), new Optargs());
    }

        public ForEach forEach(Object... fields) {
        return new ForEach(this, new Arguments(fields), new Optargs());
    }

        public Func func(Object... fields) {
        return new Func(this, new Arguments(fields), new Optargs());
    }

        public Asc asc(Object... fields) {
        return new Asc(this, new Arguments(fields), new Optargs());
    }

        public Desc desc(Object... fields) {
        return new Desc(this, new Arguments(fields), new Optargs());
    }

        public Info info(Object... fields) {
        return new Info(this, new Arguments(fields), new Optargs());
    }

        public Match match(Object... fields) {
        return new Match(this, new Arguments(fields), new Optargs());
    }

        public Upcase upcase(Object... fields) {
        return new Upcase(this, new Arguments(fields), new Optargs());
    }

        public Downcase downcase(Object... fields) {
        return new Downcase(this, new Arguments(fields), new Optargs());
    }

        public Sample sample(Object... fields) {
        return new Sample(this, new Arguments(fields), new Optargs());
    }

        public Default default(Object... fields) {
        return new Default(this, new Arguments(fields), new Optargs());
    }

        public Json json(Object... fields) {
        return new Json(this, new Arguments(fields), new Optargs());
    }

        public ToJsonString toJson(Object... fields) {
        return new ToJsonString(this, new Arguments(fields), new Optargs());
    }

        public Iso8601 iso8601(Object... fields) {
        return new Iso8601(this, new Arguments(fields), new Optargs());
    }

        public ToIso8601 toIso8601(Object... fields) {
        return new ToIso8601(this, new Arguments(fields), new Optargs());
    }

        public EpochTime epochTime(Object... fields) {
        return new EpochTime(this, new Arguments(fields), new Optargs());
    }

        public ToEpochTime toEpochTime(Object... fields) {
        return new ToEpochTime(this, new Arguments(fields), new Optargs());
    }

        public Now now(Object... fields) {
        return new Now(this, new Arguments(fields), new Optargs());
    }

        public InTimezone inTimezone(Object... fields) {
        return new InTimezone(this, new Arguments(fields), new Optargs());
    }

        public During during(Object... fields) {
        return new During(this, new Arguments(fields), new Optargs());
    }

        public Date date(Object... fields) {
        return new Date(this, new Arguments(fields), new Optargs());
    }

        public TimeOfDay timeOfDay(Object... fields) {
        return new TimeOfDay(this, new Arguments(fields), new Optargs());
    }

        public Timezone timezone(Object... fields) {
        return new Timezone(this, new Arguments(fields), new Optargs());
    }

        public Year year(Object... fields) {
        return new Year(this, new Arguments(fields), new Optargs());
    }

        public Month month(Object... fields) {
        return new Month(this, new Arguments(fields), new Optargs());
    }

        public Day day(Object... fields) {
        return new Day(this, new Arguments(fields), new Optargs());
    }

        public DayOfWeek dayOfWeek(Object... fields) {
        return new DayOfWeek(this, new Arguments(fields), new Optargs());
    }

        public DayOfYear dayOfYear(Object... fields) {
        return new DayOfYear(this, new Arguments(fields), new Optargs());
    }

        public Hours hours(Object... fields) {
        return new Hours(this, new Arguments(fields), new Optargs());
    }

        public Minutes minutes(Object... fields) {
        return new Minutes(this, new Arguments(fields), new Optargs());
    }

        public Seconds seconds(Object... fields) {
        return new Seconds(this, new Arguments(fields), new Optargs());
    }

        public Time time(Object... fields) {
        return new Time(this, new Arguments(fields), new Optargs());
    }

        public Monday monday(Object... fields) {
        return new Monday(this, new Arguments(fields), new Optargs());
    }

        public Tuesday tuesday(Object... fields) {
        return new Tuesday(this, new Arguments(fields), new Optargs());
    }

        public Wednesday wednesday(Object... fields) {
        return new Wednesday(this, new Arguments(fields), new Optargs());
    }

        public Thursday thursday(Object... fields) {
        return new Thursday(this, new Arguments(fields), new Optargs());
    }

        public Friday friday(Object... fields) {
        return new Friday(this, new Arguments(fields), new Optargs());
    }

        public Saturday saturday(Object... fields) {
        return new Saturday(this, new Arguments(fields), new Optargs());
    }

        public Sunday sunday(Object... fields) {
        return new Sunday(this, new Arguments(fields), new Optargs());
    }

        public January january(Object... fields) {
        return new January(this, new Arguments(fields), new Optargs());
    }

        public February february(Object... fields) {
        return new February(this, new Arguments(fields), new Optargs());
    }

        public March march(Object... fields) {
        return new March(this, new Arguments(fields), new Optargs());
    }

        public April april(Object... fields) {
        return new April(this, new Arguments(fields), new Optargs());
    }

        public May may(Object... fields) {
        return new May(this, new Arguments(fields), new Optargs());
    }

        public June june(Object... fields) {
        return new June(this, new Arguments(fields), new Optargs());
    }

        public July july(Object... fields) {
        return new July(this, new Arguments(fields), new Optargs());
    }

        public August august(Object... fields) {
        return new August(this, new Arguments(fields), new Optargs());
    }

        public September september(Object... fields) {
        return new September(this, new Arguments(fields), new Optargs());
    }

        public October october(Object... fields) {
        return new October(this, new Arguments(fields), new Optargs());
    }

        public November november(Object... fields) {
        return new November(this, new Arguments(fields), new Optargs());
    }

        public December december(Object... fields) {
        return new December(this, new Arguments(fields), new Optargs());
    }

        public Literal literal(Object... fields) {
        return new Literal(this, new Arguments(fields), new Optargs());
    }

        public Group group(Object... fields) {
        return new Group(this, new Arguments(fields), new Optargs());
    }

        public Sum sum(Object... fields) {
        return new Sum(this, new Arguments(fields), new Optargs());
    }

        public Avg avg(Object... fields) {
        return new Avg(this, new Arguments(fields), new Optargs());
    }

        public Min min(Object... fields) {
        return new Min(this, new Arguments(fields), new Optargs());
    }

        public Max max(Object... fields) {
        return new Max(this, new Arguments(fields), new Optargs());
    }

        public Split split(Object... fields) {
        return new Split(this, new Arguments(fields), new Optargs());
    }

        public Ungroup ungroup(Object... fields) {
        return new Ungroup(this, new Arguments(fields), new Optargs());
    }

        public Random random(Object... fields) {
        return new Random(this, new Arguments(fields), new Optargs());
    }

        public Changes changes(Object... fields) {
        return new Changes(this, new Arguments(fields), new Optargs());
    }

        public Args args(Object... fields) {
        return new Args(this, new Arguments(fields), new Optargs());
    }

        public Binary binary(Object... fields) {
        return new Binary(this, new Arguments(fields), new Optargs());
    }

        public Geojson geojson(Object... fields) {
        return new Geojson(this, new Arguments(fields), new Optargs());
    }

        public ToGeojson toGeojson(Object... fields) {
        return new ToGeojson(this, new Arguments(fields), new Optargs());
    }

        public Point point(Object... fields) {
        return new Point(this, new Arguments(fields), new Optargs());
    }

        public Line line(Object... fields) {
        return new Line(this, new Arguments(fields), new Optargs());
    }

        public Polygon polygon(Object... fields) {
        return new Polygon(this, new Arguments(fields), new Optargs());
    }

        public Distance distance(Object... fields) {
        return new Distance(this, new Arguments(fields), new Optargs());
    }

        public Intersects intersects(Object... fields) {
        return new Intersects(this, new Arguments(fields), new Optargs());
    }

        public Includes includes(Object... fields) {
        return new Includes(this, new Arguments(fields), new Optargs());
    }

        public Circle circle(Object... fields) {
        return new Circle(this, new Arguments(fields), new Optargs());
    }

        public GetIntersecting getIntersecting(Object... fields) {
        return new GetIntersecting(this, new Arguments(fields), new Optargs());
    }

        public Fill fill(Object... fields) {
        return new Fill(this, new Arguments(fields), new Optargs());
    }

        public GetNearest getNearest(Object... fields) {
        return new GetNearest(this, new Arguments(fields), new Optargs());
    }

        public PolygonSub polygonSub(Object... fields) {
        return new PolygonSub(this, new Arguments(fields), new Optargs());
    }

        public Minval minval(Object... fields) {
        return new Minval(this, new Arguments(fields), new Optargs());
    }

        public Maxval maxval(Object... fields) {
        return new Maxval(this, new Arguments(fields), new Optargs());
    }

}
